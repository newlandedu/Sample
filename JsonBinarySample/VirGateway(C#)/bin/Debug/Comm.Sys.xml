<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Comm.Sys</name>
    </assembly>
    <members>
        <member name="T:Comm.Sys.ILibObservableCollection">
            <summary>
            <see cref="T:Comm.Sys.LibObservableCollection`1"/>的接口
            </summary>
        </member>
        <member name="P:Comm.Sys.ILibObservableCollection.Lock">
            <summary>
            获取<see cref="T:Comm.Utils.ILibReaderWriterLock"/>对象
            </summary>
        </member>
        <member name="T:Comm.Sys.LibDataErrorInfo">
            <summary>
            验证错误基类(实体继承该类)
            </summary>
        </member>
        <member name="P:Comm.Sys.LibDataErrorInfo.InitCtrlNeedVerify">
            <summary>
            初次显示控件是否进行验证，设为true时则控件一Binding就进行第一次验证(控件表现为有验证提示)
            设为false则反之,同时结合控件本身的LostFocus事件当属性值为NULL时,该事件中设置绑定目标控件的Text值为"",激发属性值改变而进行控件验证
            </summary>
        </member>
        <member name="P:Comm.Sys.LibDataErrorInfo.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Comm.Sys.LibDataErrorInfo.Item(System.String)">
            <summary>
            获取某属性错误信息
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="P:Comm.Sys.LibDataErrorInfo.ErrorList">
            <summary>
            获取验证错误列表
            </summary>
        </member>
        <member name="M:Comm.Sys.LibDataErrorInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Comm.Sys.LibServiceAssemblyInstAttribute">
            <summary>
            Lib 程序集服务 Attribute
            </summary>
        </member>
        <member name="P:Comm.Sys.LibServiceAssemblyInstAttribute.ServiceCategory">
            <summary>
            服务分类
            </summary>
        </member>
        <member name="M:Comm.Sys.LibServiceAssemblyInstAttribute.#ctor(Comm.Sys.LibServiceCategory,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="serviceCategory">Service种类</param>
            <param name="description">针对该程序集的描述</param>
        </member>
        <member name="T:Comm.Sys.LibAppClassInstAttribute">
            <summary>
            应用/功能类实例属性说明
            </summary>
        </member>
        <member name="M:Comm.Sys.LibAppClassInstAttribute.#ctor(Comm.Sys.LibAppClassCategory,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="classCategory">程序类分类</param>
            <param name="functionId">功能标识</param>
        </member>
        <member name="M:Comm.Sys.LibAppClassInstAttribute.#ctor(Comm.Sys.LibFunctionCategory,Comm.Sys.LibAppClassCategory,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="functionCategory">功能类别</param>
            <param name="classCategory">程序类分类</param>
            <param name="functionId">功能标识</param>
        </member>
        <member name="M:Comm.Sys.LibAppClassInstAttribute.#ctor(Comm.Sys.LibAppClassCategory,System.String,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="classCategory">程序类分类</param>
            <param name="functionId">功能标识</param>
            <param name="description">针对该程序集的描述</param>
        </member>
        <member name="M:Comm.Sys.LibAppClassInstAttribute.#ctor(Comm.Sys.LibFuncDeveloperCategory,Comm.Sys.LibAppClassCategory,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="developer">功能开发者分类</param>
            <param name="classCategory">程序类分类</param>
            <param name="functionId">功能标识</param>
        </member>
        <member name="M:Comm.Sys.LibAppClassInstAttribute.#ctor(Comm.Sys.LibFuncDeveloperCategory,Comm.Sys.LibAppClassCategory,System.String,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="developer">功能开发者分类</param>
            <param name="classCategory">程序类分类</param>
            <param name="functionId">功能标识</param>
            <param name="description">针对该程序集的描述</param>
        </member>
        <member name="M:Comm.Sys.LibAppClassInstAttribute.#ctor(Comm.Sys.LibFuncDeveloperCategory,Comm.Sys.LibFunctionCategory,Comm.Sys.LibAppClassCategory,System.String,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="developer">功能开发者分类</param>
            <param name="functionCategory">功能类别</param>
            <param name="classCategory">程序类分类</param>
            <param name="functionId">功能标识</param>
            <param name="description">针对该程序集的描述</param>
        </member>
        <member name="P:Comm.Sys.LibAppClassInstAttribute.ClassCategory">
            <summary>
            程序类分类
            </summary>
        </member>
        <member name="P:Comm.Sys.LibAppClassInstAttribute.FunctionCategory">
            <summary>
            功能类别
            </summary>
        </member>
        <member name="P:Comm.Sys.LibAppClassInstAttribute.FunctionId">
            <summary>
            功能标识
            </summary>
        </member>
        <member name="P:Comm.Sys.LibAppClassInstAttribute.Developer">
            <summary>
            开发者来源分类
            </summary>
        </member>
        <member name="T:Comm.Sys.LibDeviceInfoAttribute">
            <summary>
            设备信息属性说明
            </summary>
        </member>
        <member name="P:Comm.Sys.LibDeviceInfoAttribute.FunctionGroup">
            <summary>
            设备功能类型
            </summary>
        </member>
        <member name="P:Comm.Sys.LibDeviceInfoAttribute.Name">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:Comm.Sys.LibDeviceInfoAttribute.Model">
            <summary>
            设备型号
            </summary>
        </member>
        <member name="P:Comm.Sys.LibDeviceInfoAttribute.Manufacturer">
            <summary>
            制造商
            </summary>
        </member>
        <member name="P:Comm.Sys.LibDeviceInfoAttribute.Code">
            <summary>
            物料编码
            </summary>
        </member>
        <member name="P:Comm.Sys.LibDeviceInfoAttribute.ConnectMode">
            <summary>
            获取此硬件的连接方法
            </summary>
        </member>
        <member name="P:Comm.Sys.LibDeviceInfoAttribute.Serial">
            <summary>
            设备序列号
            </summary>
        </member>
        <member name="M:Comm.Sys.LibDeviceInfoAttribute.#ctor(Comm.Sys.LibFunctionGroup,System.String,System.String,System.String,System.String,Comm.Sys.LibDeviceConnectMode,System.String,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="functionGroup">设备分组</param>
            <param name="name">设备名称</param>
            <param name="model">设备型号</param>
            <param name="manufacturer">制造商</param>
            <param name="code">物料编码</param>
            <param name="connectMode">连接方式</param>
            <param name="serial">序列号</param>
            <param name="description"></param>
        </member>
        <member name="M:Comm.Sys.LibDeviceInfoAttribute.#ctor(Comm.Sys.LibFunctionGroup,System.String,System.String,System.String,System.String,Comm.Sys.LibDeviceConnectMode,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="functionGroup">设备分组</param>
            <param name="name">设备名称</param>
            <param name="model">设备型号</param>
            <param name="manufacturer">制造商</param>
            <param name="code">物料编码</param>
            <param name="connectMode">连接方式</param>
            <param name="serial">序列号</param>
        </member>
        <member name="M:Comm.Sys.LibDeviceInfoAttribute.GetAttribute(System.Object)">
            <summary>
            获取枚举值的属性对象
            </summary>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.LibDeviceInfoAttribute.GetAttribute(System.Type)">
            <summary>
            获取枚举类型定义的所有文本
            </summary>
            <param name="enumType">枚举类型</param>
            <param name="sortType">排序类型</param>
            <returns>枚举描述集合</returns>
        </member>
        <member name="T:Comm.Sys.LibObservableCollection`1">
            <summary>
            表示一个动态数据集合，在添加项、移除项或刷新整个列表时，此集合将提供通知
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Comm.Sys.LibObservableCollection`1.#ctor" -->
        <!-- Badly formed XML comment ignored for member "M:Comm.Sys.LibObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" -->
        <!-- Badly formed XML comment ignored for member "M:Comm.Sys.LibObservableCollection`1.#ctor(System.Collections.Generic.List{`0})" -->
        <member name="M:Comm.Sys.LibObservableCollection`1.FirstOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            返回指定序列中的第一个元素。(已加读锁)
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.LibObservableCollection`1.ToArray">
            <summary>
            返回数组（已加读锁）， 在遍历集合前的时候使用
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Comm.Sys.LibObservableCollection`1.DoCopyFromItemed(`0)" -->
        <!-- Badly formed XML comment ignored for member "M:Comm.Sys.LibObservableCollection`1.ClearItems" -->
        <!-- Badly formed XML comment ignored for member "M:Comm.Sys.LibObservableCollection`1.InsertItem(System.Int32,`0)" -->
        <member name="M:Comm.Sys.LibObservableCollection`1.MoveItem(System.Int32,System.Int32)">
            <summary>
            将指定索引处的项移至集合中的新位置
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="M:Comm.Sys.LibObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            引发带有提供的参数的 CollectionChanged 事件
            </summary>
            <param name="e"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Comm.Sys.LibObservableCollection`1.RemoveItem(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Comm.Sys.LibObservableCollection`1.SetItem(System.Int32,`0)" -->
        <member name="M:Comm.Sys.LibObservableCollection`1.Move(System.Int32,System.Int32)">
            <summary>
            将指定索引处的项移至集合中的新位置
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="M:Comm.Sys.LibObservableCollection`1.RemoveRange(System.Collections.IList)">
            <summary>
            RemoveRange
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Comm.Sys.LibObservableCollection`1.AddRange(System.Collections.IList)">
            <summary>
            AddRange
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Comm.Sys.LibObservableCollection`1.AddRangeGeneric``1(System.Collections.Generic.IList{``0},System.Func{``0,`0})">
            <summary>
            分批添加数据
            </summary>
            <typeparam name="K"></typeparam>
            <param name="collection"></param>
            <param name="delegateFunc"></param>
        </member>
        <member name="M:Comm.Sys.LibObservableCollection`1.AddRangeEx(System.Collections.IList,System.Func{System.Object,`0})">
            <summary>
            分批添加数据
            </summary>
            <param name="collection"></param>
            <param name="delegateFunc"></param>
        </member>
        <member name="M:Comm.Sys.LibObservableCollection`1.AddRangeEx(System.Int32,System.Object,System.Func{System.Object,`0})">
            <summary>
            分批添加数据
            </summary>
            <param name="count"></param>
            <param name="args"></param>
            <param name="delegateFunc"></param>
        </member>
        <member name="P:Comm.Sys.LibObservableCollection`1.Lock">
            <summary>
            获取<see cref="T:Comm.Utils.ILibReaderWriterLock"/>对象
            </summary>
        </member>
        <member name="T:Comm.Sys.LibObservableCollection`1.SimpleMonitor`1">
            <summary>
            此集合成员的监视器
            </summary>
            <typeparam name="TT"></typeparam>
        </member>
        <member name="E:Comm.Sys.LibObservableCollection`1.PropertyChanged">
            <summary>
            属性更改通知事件
            </summary>
        </member>
        <member name="E:Comm.Sys.LibObservableCollection`1.CollectionChanged">
            <summary>
            在添加、移除、更改或移动项或者在刷新整个列表时发生
            </summary>   
        </member>
        <member name="T:Comm.Sys.LibSpecialFuncDefine">
            <summary>
            特殊功能定义
            </summary>
        </member>
        <member name="F:Comm.Sys.LibSpecialFuncDefine.ExceFunctionId">
            <summary>
            系统功能编号
            </summary>
        </member>
        <member name="F:Comm.Sys.LibSpecialFuncDefine.SystemFunctionId">
            <summary>
            系统功能编号
            </summary>
        </member>
        <member name="F:Comm.Sys.LibSpecialFuncDefine.DeviceFunctionId">
            <summary>
            设备功能编号
            </summary>
        </member>
        <member name="F:Comm.Sys.LibSpecialFuncDefine.AdapterFunctionId">
            <summary>
            适配器功能编号
            </summary>
        </member>
        <member name="F:Comm.Sys.LibSpecialFuncDefine.AdapterFunctionType">
            <summary>
            适配器功能类名
            </summary>
        </member>
        <member name="T:Comm.Sys.LibFunctionConfigConst">
            <summary>
            功能提供者配置文件常量定义
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.AdapterFileName">
            <summary>
            适配文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Analog_Adam4017">
            <summary>
            模拟量默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Digital_Adam4150">
            <summary>
            模拟量默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.ZigBee_V12">
            <summary>
            模拟量默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Tag_Srr1101">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Tag_Srr1111">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Tag_Srr1400">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.SmartCard_MifareM2">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.LED_Screen">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.LED_BX5MK1">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.LED_T808KN">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Camera_NeoA02">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Camera_NeoH20">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Camera_DH_SD_6C3230U_HN">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Guard_S60">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.ElectricMeter_D119009">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.MdeicalBox_MedicalBoxV12">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.GoodsTerminal_NQuire232">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Gateway_FTSSH200">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Gateway_FTSSH200_VT">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Gateway_ZA_WGG_V1000">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.Gateway_Orvibo">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionConfigConst.IDCard_Srr210">
            <summary>
            默认文件名
            </summary>
        </member>
        <member name="T:Comm.Sys.LibFileNameConst">
            <summary>
            文件名定义
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFileNameConst.ServiceConfig">
            <summary>
            加载服务配置文件
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFileNameConst.SyncCfgFileName">
            <summary>
            配置文件
            </summary>
        </member>
        <member name="T:Comm.Sys.LibRegistryPathConst">
            <summary>
            注册表常量定义
            </summary>
        </member>
        <member name="F:Comm.Sys.LibRegistryPathConst.Root">
            <summary>
            注册表根路径
            </summary>
        </member>
        <member name="F:Comm.Sys.LibRegistryPathConst.Workspace">
            <summary>
            工作目录信息
            </summary>
        </member>
        <member name="F:Comm.Sys.LibRegistryPathConst.AppData">
            <summary>
            应用程序数据
            </summary>
        </member>
        <member name="F:Comm.Sys.LibRegistryPathConst.UserData">
            <summary>
            用户级数据
            </summary>
        </member>
        <member name="T:Comm.Sys.LibRegistryValueConst">
            <summary>
            注册表键值名称定义
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRegistryValueConst.GetRuntimeRootName(Comm.Sys.WorkStationKind)">
            <summary>
            获取注册表中运行库所在路径的键值名称
            </summary>
            <param name="stationKind"></param>
            <returns></returns>
        </member>
        <member name="F:Comm.Sys.LibRegistryValueConst.WorkspaceRoot">
            <summary>
            工作环境根路径
            </summary>
        </member>
        <member name="F:Comm.Sys.LibRegistryValueConst.CurrentProductCode">
            <summary>
            当前产品简码
            </summary>
        </member>
        <member name="T:Comm.Sys.ILibBusServiceBase">
            <summary>
             所有总线服务的基接口
            </summary>
        </member>
        <member name="P:Comm.Sys.ILibBusServiceBase.ServiceGroup">
            <summary>
            获取该Service所属群组
            </summary>
        </member>
        <member name="T:Comm.Sys.LibRuntimeServiceState">
            <summary>
            运行期服务状态
            </summary>
        </member>
        <member name="F:Comm.Sys.LibRuntimeServiceState.Starting">
            <summary>
            正在启动
            </summary>
        </member>
        <member name="F:Comm.Sys.LibRuntimeServiceState.Started">
            <summary>
            已经启动
            </summary>
        </member>
        <member name="F:Comm.Sys.LibRuntimeServiceState.Stopping">
            <summary>
            正在停止
            </summary>
        </member>
        <member name="F:Comm.Sys.LibRuntimeServiceState.Stopped">
            <summary>
            已经停止
            </summary>
        </member>
        <member name="T:Comm.Sys.ILibRuntimeBusService">
            <summary>
            运行期服务接口
            </summary>
        </member>
        <member name="M:Comm.Sys.ILibRuntimeBusService.Start">
            <summary>
            启动Service
            </summary>
        </member>
        <member name="M:Comm.Sys.ILibRuntimeBusService.Stop">
            <summary>
            停止Service
            </summary>
        </member>
        <member name="P:Comm.Sys.ILibRuntimeBusService.State">
            <summary>
            获取当前Service的启动状态
            </summary>
        </member>
        <member name="M:Comm.Sys.ILibRuntimeBusService.RegistTimeStart">
            <summary>
            获取是否是注册时立即启动
            </summary>
            <returns></returns>
        </member>
        <member name="E:Comm.Sys.ILibRuntimeBusService.Started">
            <summary>
            服务启动完成事件
            </summary>
        </member>
        <member name="T:Comm.Sys.LibBusServiceBase">
            <summary>
            所有总线服务的基类
            </summary>
        </member>
        <member name="P:Comm.Sys.LibBusServiceBase.ServiceGroup">
            <summary>
            获取该Service所属群组
            </summary>
        </member>
        <member name="T:Comm.Sys.LibRuntimeBusService">
            <summary>
            运行时总线服务基类
            </summary>
        </member>
        <member name="P:Comm.Sys.LibRuntimeBusService.State">
            <summary>
            获取状态
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.RegistTimeStart">
            <summary>
            获取是否是注册时立即启动
            </summary>
            <returns></returns>
        </member>
        <member name="E:Comm.Sys.LibRuntimeBusService.Started">
            <summary>
            服务启动完成事件
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.OnStarting">
            <summary>
            本服务开始启动
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.DoStart">
            <summary>
            本服务启动
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.OnStarted">
            <summary>
            本服务已经启动
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.OnStopping">
            <summary>
            本服务开始停止
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.DoStop">
            <summary>
            本服务停止
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.OnStopped">
            <summary>
            本服务已经停止
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.Start">
            <summary>
            启动
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Comm.Sys.LibRuntimeBusService.DoDispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:Comm.Sys.ILibBusServiceGroupBase">
            <summary>
            所有总线服务分组的基接口
            </summary>
        </member>
        <member name="T:Comm.Sys.ILibServiceDescBase">
            <summary>
            服务描述的基接口
            </summary>
        </member>
        <member name="P:Comm.Sys.ILibServiceDescBase.Name">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:Comm.Sys.ILibServiceDescBase.DisplayName">
            <summary>
            分组的显示名称
            </summary>
        </member>
        <member name="P:Comm.Sys.ILibServiceDescBase.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Comm.Sys.LibBusServiceGroupBase">
            <summary>
            所有总线服务分组的基类
            </summary>
        </member>
        <member name="T:Comm.Sys.LibCoreGroup">
            <summary>
            核心服务组
            </summary>
        </member>
        <member name="T:Comm.Sys.LibCommGroup">
            <summary>
            公共服务组
            </summary>
        </member>
        <member name="T:Comm.Sys.LibDataGroup">
            <summary>
            数据层服务群组
            </summary>
        </member>
        <member name="T:Comm.Sys.LibBizGroup">
            <summary>
            业务逻辑服务群组
            </summary>
        </member>
        <member name="T:Comm.Sys.LibUIGroup">
            <summary>
            表现层服务群组
            </summary>
        </member>
        <member name="T:Comm.Sys.LibCoreService">
            <summary>
            核心服务
            </summary>
        </member>
        <member name="P:Comm.Sys.LibCoreService.Workspace">
            <summary>
            工作目录属性
            </summary>
        </member>
        <member name="P:Comm.Sys.LibCoreService.WorkStationKind">
            <summary>
            工作站性质
            </summary>
        </member>
        <member name="P:Comm.Sys.LibCoreService.ProductKind">
            <summary>
            项目类别
            </summary>
        </member>
        <member name="P:Comm.Sys.LibCoreService.ProductVersion">
            <summary>
            项目版本
            </summary>
        </member>
        <member name="P:Comm.Sys.LibCoreService.ProductLanguage">
            <summary>
            项目语系名称
            </summary>
        </member>
        <member name="P:Comm.Sys.LibCoreService.ProductStratTime">
            <summary>
            产品启动时间
            </summary>
        </member>
        <member name="M:Comm.Sys.LibCoreService.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Comm.Sys.LibCoreService.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Comm.Sys.LibCoreService.Instance">
            <summary>
            获取Singleton实例
            </summary>
        </member>
        <member name="M:Comm.Sys.LibCoreService.InitialzieEnv(Comm.Sys.LibEnvInfo)">
            <summary>
            初始化环境
            </summary>
            <param name="envInfo"></param>
        </member>
        <member name="T:Comm.Sys.LibEnvInfo">
            <summary>
            初始化信息描述对象
            </summary>
        </member>
        <member name="F:Comm.Sys.LibEnvInfo.WorkStationKind">
            <summary>
            工作站性质
            </summary>
        </member>
        <member name="F:Comm.Sys.LibEnvInfo.ProductKind">
            <summary>
            项目类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibEnvInfo.ProductVersion">
            <summary>
            项目版本
            </summary>
        </member>
        <member name="T:Comm.Sys.LibServiceDescBase">
            <summary>
            服务描述的基接口
            </summary>
        </member>
        <member name="M:Comm.Sys.LibServiceDescBase.DoGetName">
            <summary>
            子类可重载标识名称
            </summary>
        </member>
        <member name="M:Comm.Sys.LibServiceDescBase.DoGetDisplayName">
            <summary>
            子类可重载显示名称
            </summary>
        </member>
        <member name="M:Comm.Sys.LibServiceDescBase.DoGetRemark">
            <summary>
            子类可重载备注信息
            </summary>
        </member>
        <member name="P:Comm.Sys.LibServiceDescBase.Name">
            <summary>
            标识名称
            </summary>
            <value></value>
        </member>
        <member name="P:Comm.Sys.LibServiceDescBase.DisplayName">
            <summary>
            显示的名称
            </summary>
            <value></value>
        </member>
        <member name="P:Comm.Sys.LibServiceDescBase.Remark">
            <summary>
            备注信息
            </summary>
        </member>
        <member name="T:Comm.Sys.LibWorkspaceInfo">
            <summary>
            工作空间类
            </summary>
        </member>
        <member name="M:Comm.Sys.LibWorkspaceInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Comm.Sys.LibWorkspaceInfo.#ctor(Comm.Sys.LibCoreService)">
            <summary>
            构造函数
            </summary>
            <param name="coreService"></param>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.Root">
            <summary>
            程序运行根目录
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.RuntimeDir">
            <summary>
            获取运行期目录(B/S一般为Bin下面的目录)
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.FinalRegistryRoot">
            <summary>
            获取最终注册表根目录
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.ConfigDir">
            <summary>
            获取配置目录
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.PluginDir">
            <summary>
            获取插件目录
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.ResDir">
            <summary>
            获取资源目录
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.UpdateDir">
            <summary>
            获取升级目录
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.LogDir">
            <summary>
            获取日志目录
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.CacheDir">
            <summary>
            获取临时文件目录
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.SkinDir">
            <summary>
            获取皮肤文件目录
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.BackupDir">
            <summary>
            获取备份文件目录
            </summary>
        </member>
        <member name="P:Comm.Sys.LibWorkspaceInfo.TempDir">
            <summary>
            获取Temp文件目录
            </summary>
        </member>
        <member name="M:Comm.Sys.LibWorkspaceInfo.CombinePath(System.String)">
            <summary>
            路径
            </summary>
            <param name="partPath"></param>
            <returns></returns>
        </member>
        <member name="T:Comm.Sys.LibDeviceConnectMode">
            <summary>
            设备连接模式枚举.
            </summary>
        </member>
        <member name="F:Comm.Sys.LibDeviceConnectMode.COM">
            <summary>
            串口
            </summary>
        </member>
        <member name="F:Comm.Sys.LibDeviceConnectMode.USB">
            <summary>
            USB
            </summary>
        </member>
        <member name="F:Comm.Sys.LibDeviceConnectMode.LAN">
            <summary>
            LAN
            </summary>
        </member>
        <member name="F:Comm.Sys.LibDeviceConnectMode.WIFI">
            <summary>
            WIFI
            </summary>
        </member>
        <member name="F:Comm.Sys.LibDeviceConnectMode.BLUETOOTH">
            <summary>
            蓝牙
            </summary>
        </member>
        <member name="F:Comm.Sys.LibDeviceConnectMode.GPRS">
            <summary>
            GPRS
            </summary>
        </member>
        <member name="T:Comm.Sys.LibFuncDeveloperCategory">
            <summary>
            功能开发者分类
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFuncDeveloperCategory.Standard">
            <summary>
            标准套装开发
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFuncDeveloperCategory.Franchiser">
            <summary>
            经销商开发
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFuncDeveloperCategory.Customer">
            <summary>
            第三方自行开发
            </summary>
        </member>
        <member name="T:Comm.Sys.LibFunctionCategory">
            <summary>
            功能类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.None">
            <summary>
            未能识别或给默认留空的
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Analog_Adam4017">
            <summary>
            模拟量ADAM4017
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Digital_Adam4150">
            <summary>
            数据量ADAM4150
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.ZigBee_V12">
            <summary>
            ZigBee（V1.2烧写版）
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Gateway_FTSSH200">
            <summary>
            冷链终端FTSSH200(MODBUS/ZIBGEE)
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Gateway_FTSSH200_VT">
            <summary>
            冷链终端FTSSH200(温湿度版)
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Gateway_ZA_WGG_V1000">
            <summary>
            左岸终端ZA-WGG-V1000
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Gateway_Orvibo">
            <summary>
            欧瑞博终端
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Gateway_ColliHigh_KL_H1200_A_485">
            <summary>
            昆仑海岸终端KL-H1200-A-485
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Tag_Srr1101">
            <summary>
            电子标签-桌面超高频
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Tag_Srr1111">
            <summary>
            电子标签-中距离一体机
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Tag_Srr1400">
            <summary>
            电子标签-超高频四通道读写器
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.SmartCard_MifareM2">
            <summary>
            Mifare
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.LED_Screen">
            <summary>
            LED显示屏
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.LED_BX5MK1">
            <summary>
            BX5MK LED显示屏
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.LED_T808KN">
            <summary>
            BX5MK LED显示屏
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Camera_NeoA02">
            <summary>
            摄像头NeoA02
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Camera_NeoH20">
            <summary>
            摄像头NeoH20
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Camera_DH_SD_6C3230U_HN">
            <summary>
            摄像头DH-SD-6C3230U-HN
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.Guard_S60">
            <summary>
            巡更
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.ElectricMeter_D119009">
            <summary>
            智能电表
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.MdeicalBox_MedicalBoxV12">
            <summary>
            医疗箱
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.GoodsTerminal_NQuire232">
            <summary>
            客户信息终端
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.POS_ME31">
            <summary>
            消费终端POS ME31
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionCategory.IDCard_Srr210">
            <summary>
            Srr210 ID读卡器
            </summary>
        </member>
        <member name="T:Comm.Sys.LibFunctionGroup">
            <summary>
            功能分组
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.None">
            <summary>
            未能识别或给默认留空的
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.Analog">
            <summary>
            模拟量
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.Digital">
            <summary>
            数据量
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.ZigBee">
            <summary>
            采集器ZigBee
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.Gateway">
            <summary>
            网关采集器
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.Tag">
            <summary>
            电子标签
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.SmartCard">
            <summary>
            IC卡,智能卡
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.LED">
            <summary>
            LED显示屏
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.Camera">
            <summary>
            摄像头
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.Guard">
            <summary>
            巡更
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.ElectricMeter">
            <summary>
            智能电表
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.MdeicalBox">
            <summary>
            医疗箱
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.GoodsTerminal">
            <summary>
            商品信息终端
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.POS">
            <summary>
            消费终端（POS）
            </summary>
        </member>
        <member name="F:Comm.Sys.LibFunctionGroup.IDCard">
            <summary>
            ID卡
            </summary>
        </member>
        <member name="T:Comm.Sys.InstHelper">
            <summary>
            系统实例助手类
            </summary>
        </member>
        <member name="F:Comm.Sys.InstHelper.m_Reflex">
            <summary>
            动态加载
            </summary>
        </member>
        <member name="M:Comm.Sys.InstHelper.CreateInstance(System.String,Comm.Sys.LibAppClassCategory,Comm.Sys.LibFunctionCategory)">
            <summary>
            创建实例
            </summary>
            <param name="functionId">功能ID</param>
            <param name="classCategory">类分类</param>
            <param name="functionCategory">功能类别</param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.InstHelper.CreateInstance(System.String,System.String,System.String,System.String)">
            <summary>
            创建实例(根据动态链接库创建)
            </summary>
            <param name="functionId">功能ID</param>
            <param name="strPath">所在路径</param>
            <param name="assemblyName">DLL名</param>
            <param name="typeName">类名</param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.InstHelper.CatchAppDomainUnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            预加载程序域未处理异常
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Comm.Sys.InstHelper.LibDomainAssemblyLoad(System.Object,System.AssemblyLoadEventArgs)">
            <summary>
            程序域加载程序集时触发
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Comm.Sys.LibPagerParameters">
            <summary>
            分页参数
            </summary>
        </member>
        <member name="P:Comm.Sys.LibPagerParameters.PageIndex">
            <summary>
            指定页码
            </summary>
        </member>
        <member name="P:Comm.Sys.LibPagerParameters.PageSize">
            <summary>
            指定每页显示数据个数
            </summary>
        </member>
        <member name="M:Comm.Sys.LibPagerParameters.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Comm.Sys.LibPagerParameters.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:Comm.Sys.LibPagerParameters.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
        </member>
        <member name="T:Comm.Sys.LibPagerParameters`1">
            <summary>
            分页参数
            </summary>
        </member>
        <member name="P:Comm.Sys.LibPagerParameters`1.QryEntity">
            <summary>
            查询实体数据
            </summary>
        </member>
        <member name="M:Comm.Sys.LibPagerParameters`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Comm.Sys.LibPagerParameters`1.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:Comm.Sys.LibPagerParameters`1.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
        </member>
        <member name="M:Comm.Sys.LibPagerParameters`1.#ctor(Comm.Sys.LibPagerParameters)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Comm.Sys.LibAppClassCategory">
            <summary>
            程序类分类
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.DataAcc">
            <summary>
            数据访问层
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.ProviderBiz">
            <summary>
            业务逻辑功能类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.Model">
            <summary>
            功能对应的实体模型
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.VMForm">
            <summary>
            ViewModel功能类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.VMWpf">
            <summary>
            Wpf ViewModel功能类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.VMSilverlight">
            <summary>
            Silverlight ViewModel功能类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.VMWebForm">
            <summary>
            Web ViewModel界面
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.VMMvc">
            <summary>
            Mvc ViewModel界面
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.ViewForm">
            <summary>
            Winform视图类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.ViewWpf">
            <summary>
            WPF视图类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.ViewSilverlight">
            <summary>
            Silverlight视图类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.ViewWebForm">
            <summary>
            WEB页面视图类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibAppClassCategory.ViewMvc">
            <summary>
            WEB MVC页面视图类别
            </summary>
        </member>
        <member name="T:Comm.Sys.WorkStationKind">
            <summary>
            工作站性质
            </summary>
        </member>
        <member name="F:Comm.Sys.WorkStationKind.WinForm">
            <summary>
            WinForm应用程序
            </summary>
        </member>
        <member name="F:Comm.Sys.WorkStationKind.WPF">
            <summary>
            WPF应用程序
            </summary>
        </member>
        <member name="F:Comm.Sys.WorkStationKind.Silverlight">
            <summary>
            Silverlight应用程序
            </summary>
        </member>
        <member name="F:Comm.Sys.WorkStationKind.WebForm">
            <summary>
            B/S应用程序
            </summary>
        </member>
        <member name="F:Comm.Sys.WorkStationKind.MvcWebForm">
            <summary>
            MVC B/S应用程序
            </summary>
        </member>
        <member name="F:Comm.Sys.WorkStationKind.ConsoleForm">
            <summary>
            控制台应用程序
            </summary>
        </member>
        <member name="T:Comm.Sys.LibEventArgs">
            <summary>
            所有Lib中事件参数的基类
            </summary>
        </member>
        <member name="T:Comm.Sys.LibSerializableEventArgs">
            <summary>
            所有Lib中可支援自定义序列化的事件参数的基类
            </summary>
        </member>
        <member name="M:Comm.Sys.LibSerializableEventArgs.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Comm.Sys.LibSerializableEventArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            反序列化构造函数
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
            <param name="context"></param>
        </member>
        <member name="M:Comm.Sys.LibSerializableEventArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:Comm.Sys.LibSerializableEventArgs.SaveToData(Comm.Sys.LibSerializableEventArgs)">
            <summary>
            将可序列化对象序列化为二进制流
            </summary>
            <param name="serializeObj"></param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.LibSerializableEventArgs.LoadFromData``1(System.Byte[])">
            <summary>
            将二进制流反序列化为对象
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.LibSerializableEventArgs.SaveCompressedToData(Comm.Sys.LibSerializableEventArgs)">
            <summary>
            将可序列化对象序列化为二进制流
            </summary>
            <param name="serializeObj"></param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.LibSerializableEventArgs.LoadUncompressedFromData``1(System.Byte[])">
            <summary>
            将二进制流反序列化为对象
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Comm.Sys.LibCompanyConst">
            <summary>
            产品常量定义
            </summary>
        </member>
        <member name="F:Comm.Sys.LibCompanyConst.CompanyShortName">
            <summary>
            公司简称
            </summary>
        </member>
        <member name="F:Comm.Sys.LibCompanyConst.CompanyFullName">
            <summary>
            公司全称
            </summary>
        </member>
        <member name="F:Comm.Sys.LibCompanyConst.CompanyShortCode">
            <summary>
            公司简码
            </summary>
        </member>
        <member name="F:Comm.Sys.LibCompanyConst.CompanyFullCode">
            <summary>
            公司全码
            </summary>
        </member>
        <member name="T:Comm.Sys.LibWorkspaceConst">
            <summary>
            工作目录常量
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.ConfigDir">
            <summary>
            配置目录
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.PluginDir">
            <summary>
            外部插件目录
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.ResDir">
            <summary>
            资源目录
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.UpdateDir">
            <summary>
            升级目录
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.LogDir">
            <summary>
            日志目录
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.CacheDir">
            <summary>
            缓存目录
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.SkinDir">
            <summary>
            皮肤目录
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.BackupDir">
            <summary>
            备份目录
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.TempDir">
            <summary>
            Temp目录
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.AssocSoftIconName">
            <summary>
            软件图标名称
            </summary>
        </member>
        <member name="F:Comm.Sys.LibWorkspaceConst.AutoUpdateExe">
            <summary>
            Update.exe名称
            </summary>
        </member>
        <member name="T:Comm.Sys.LibServiceCategory">
            <summary>
            Service分类
            </summary>
        </member>
        <member name="F:Comm.Sys.LibServiceCategory.Comm">
            <summary>
            公共Service类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibServiceCategory.Data">
            <summary>
            数据层Service类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibServiceCategory.Biz">
            <summary>
            业务Service类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibServiceCategory.Surface">
            <summary>
            表现层通用Service类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibServiceCategory.WinSurface">
            <summary>
            表现层Form Service类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibServiceCategory.WpfSurface">
            <summary>
            表现层WpfbService类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibServiceCategory.MvcSurface">
            <summary>
            表现层Mvc Service类别
            </summary>
        </member>
        <member name="F:Comm.Sys.LibServiceCategory.All">
            <summary>
            所有分类
            </summary>
        </member>
        <member name="T:Comm.Sys.LibServiceClassInstAttribute">
            <summary>
            Lib服务 Attribute
            </summary>
        </member>
        <member name="M:Comm.Sys.LibServiceClassInstAttribute.#ctor(Comm.Sys.LibServiceCategory,System.Type,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="serviceCategory">Service分类</param>
            <param name="serviceGroup">Service所属群组的类型</param>
            <param name="description">针对该程序集的描述</param>
        </member>
        <member name="P:Comm.Sys.LibServiceClassInstAttribute.ServiceCategory">
            <summary>
            分类
            </summary>
        </member>
        <member name="P:Comm.Sys.LibServiceClassInstAttribute.ServiceGroup">
            <summary>
            Service所属分组类型
            </summary>
        </member>
        <member name="T:Comm.Sys.LibSynchronizationContext">
            <summary>
            系统同步上下文件类，调用此类的Invoke方法转到主线程执行
            </summary>
        </member>
        <member name="P:Comm.Sys.LibSynchronizationContext.Current">
            <summary>
            获取<see cref="T:Comm.Sys.LibSynchronizationContext"/>实例
            </summary>
        </member>
        <member name="P:Comm.Sys.LibSynchronizationContext.UiThread">
            <summary>
            UI线程
            </summary>
        </member>
        <member name="P:Comm.Sys.LibSynchronizationContext.Dispatcher">
            <summary>
            获取或设备执行Invoke 的辅助对象，此对象在应用程序总动时设置
            </summary>
        </member>
        <member name="M:Comm.Sys.LibSynchronizationContext.Invoke(System.Delegate,System.Object[])">
            <summary>
            执行方法
            </summary>
            <param name="method">执行的方法</param>
            <param name="args">执行方法需要传递的参数</param>
            <returns></returns>
        </member>
        <member name="T:Comm.Sys.ILibDispatcher">
            <summary>
            多线程执行下，需要加入消息队列来异步处理的对象接口
            </summary>
        </member>
        <member name="P:Comm.Sys.ILibDispatcher.DispatchRequired">
            <summary>
            是否需要Dispatch()
            </summary>
            <returns></returns>
        </member>
        <member name="P:Comm.Sys.ILibDispatcher.IsHandleCreated">
            <summary>
            窗体是否被创建
            </summary>
        </member>
        <member name="P:Comm.Sys.ILibDispatcher.InvokeRequired">
            <summary>
            是否需要invoke
            </summary>
        </member>
        <member name="M:Comm.Sys.ILibDispatcher.Invoke(System.Delegate,System.Object[])">
            <summary>
            执行方法
            </summary>
            <param name="method">执行的方法</param>
            <param name="args">执行方法需要传递的参数</param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.ILibDispatcher.InvokeEx(System.Delegate,System.Object[])">
            <summary>
            执行方法
            </summary>
            <param name="method">执行的方法</param>
            <param name="args">执行方法需要传递的参数</param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.IObservableObject.RaisePropertyChanging(System.String,Comm.Sys.PropertyChangingEventArgs)">
            <summary>
            根据propertyName引发PropertyChanging事件
            </summary>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:Comm.Sys.IObservableObject.RaisePropertyChanging``1(System.Linq.Expressions.Expression{System.Func{``0}},Comm.Sys.PropertyChangingEventArgs)">
            <summary>
            根据属性表达式引发PropertyChanging事件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyExpression"></param>
        </member>
        <member name="M:Comm.Sys.IObservableObject.RaisePropertyChanged(System.String)">
            <summary>
            根据propertyName引发PropertyChanged事件
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Comm.Sys.IObservableObject.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            根据属性表达式引发PropertyChanged事件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyExpression"></param>
        </member>
        <member name="T:Comm.Sys.ObservableObject">
            <summary>
            对象变化的可通知对象
            </summary>
        </member>
        <member name="E:Comm.Sys.ObservableObject.PropertyChanging">
            <summary>
            属性将更改的事件通知
            </summary>
        </member>
        <member name="E:Comm.Sys.ObservableObject.PropertyChanged">
            <summary>
            属性改变时的事件通知
            </summary>
        </member>
        <member name="M:Comm.Sys.ObservableObject.RaisePropertyChanging(System.String,Comm.Sys.PropertyChangingEventArgs)">
            <summary>
            根据propertyName引发PropertyChanging事件
            </summary>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:Comm.Sys.ObservableObject.RaisePropertyChanging``1(System.Linq.Expressions.Expression{System.Func{``0}},Comm.Sys.PropertyChangingEventArgs)">
            <summary>
            根据属性表达式引发PropertyChanging事件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyExpression"></param>
        </member>
        <member name="M:Comm.Sys.ObservableObject.RaisePropertyChanged(System.String)">
            <summary>
            根据propertyName引发PropertyChanged事件
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Comm.Sys.ObservableObject.RaisePropertyChanged(System.Object,System.String)">
            <summary>
            根据propertyName引发PropertyChanged事件
            </summary>
            <param name="sender">引发的对象</param>
            <param name="propertyName"></param>
        </member>
        <member name="M:Comm.Sys.ObservableObject.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            根据属性表达式引发PropertyChanged事件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyExpression"></param>
        </member>
        <member name="M:Comm.Sys.ObservableObject.RaisePropertyChanged``1(System.Object,System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            根据属性表达式引发PropertyChanged事件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sender">引发的对象</param>
            <param name="propertyExpression"></param>
        </member>
        <member name="T:Comm.Sys.PropertyChangingEventArgs">
            <summary>
            属性值改变时的事件参数 从<see cref="T:System.ComponentModel.CancelEventArgs"/>类派生
            改奕<see cref="!:PropertyChangingEventArgs.Cancel"/>值决定是否取消改变
            </summary> 
        </member>
        <member name="P:Comm.Sys.PropertyChangingEventArgs.PropertyName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:Comm.Sys.PropertyChangingEventArgs.OldValue">
            <summary>
            获取改变前的值
            </summary>
        </member>
        <member name="P:Comm.Sys.PropertyChangingEventArgs.NewValue">
            <summary>
            获取改变后的值
            </summary>
        </member>
        <member name="M:Comm.Sys.PropertyChangingEventArgs.#ctor(System.String,System.Object,System.Object)">
            <summary>
            指定改变前和改变后的值的构造函数
            </summary>
            <param name="name">更改的属性名称</param>
            <param name="oldValue">改变前的值</param>
            <param name="newValue">改变后的值</param>
        </member>
        <member name="T:Comm.Sys.DataSetPagerSet">
            <summary>
            单页数据集，DataSet格式
            </summary>
        </member>
        <member name="M:Comm.Sys.DataSetPagerSet.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Comm.Sys.DataSetPagerSet.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Data.DataSet)">
            <summary>
            构造函数
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="pageCount"></param>
            <param name="recordCount"></param>
            <param name="pageSet"></param>
        </member>
        <member name="P:Comm.Sys.DataSetPagerSet.PageSet">
            <summary>
            数据集
            </summary>
        </member>
        <member name="M:Comm.Sys.DataSetPagerSet.CheckedPageSet">
            <summary>
             检测 DataSet 数据集是否为空;是空值，返回 false；不是返回 true
            </summary>
            <returns></returns>
        </member>
        <member name="T:Comm.Sys.ListPagerSet`1">
            <summary>
            单页数据集，IList集合格式
            </summary>
        </member>
        <member name="M:Comm.Sys.ListPagerSet`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Comm.Sys.ListPagerSet`1.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{`0})">
            <summary>
            构造函数
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="pageCount"></param>
            <param name="recordCount"></param>
            <param name="pageSet"></param>
        </member>
        <member name="P:Comm.Sys.ListPagerSet`1.PageSet">
            <summary>
            数据集
            </summary>
        </member>
        <member name="M:Comm.Sys.ListPagerSet`1.CheckedPageSet">
            <summary>
             检测 DataSet 数据集是否为空;是空值，返回 false；不是返回 true
            </summary>
            <returns></returns>
        </member>
        <member name="T:Comm.Sys.PagerSet">
            <summary>
            单页数据集
            </summary>
        </member>
        <member name="M:Comm.Sys.PagerSet.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Comm.Sys.PagerSet.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="pageCount"></param>
            <param name="recordCount"></param>
        </member>
        <member name="P:Comm.Sys.PagerSet.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Comm.Sys.PagerSet.PageIndex">
            <summary>
            要显示的页码(页索引)
            </summary>
        </member>
        <member name="P:Comm.Sys.PagerSet.PageSize">
            <summary>
            每页的大小
            </summary>
        </member>
        <member name="P:Comm.Sys.PagerSet.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="M:Comm.Sys.PagerSet.CheckedPageSet">
            <summary>
            检测页数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.PagerSet.CopyTo(Comm.Sys.PagerSet)">
            <summary>
            将本对象属性复制到一个新对象
            </summary>
            <param name="target"></param>
        </member>
        <member name="T:Comm.Sys.PropertySupport">
            <summary>
            提供静态类用于提取属性名
            </summary>
        </member>
        <member name="M:Comm.Sys.PropertySupport.ExtractPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            提取属性名
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyExpression">属性表达式数据结构</param>
            <returns></returns>
        </member>
        <member name="T:Comm.Sys.LibSkinManager`1">
            <summary>
            资源管理类接口，通过此接口可以取到产品的所有资源
            </summary>
        </member>
        <member name="M:Comm.Sys.LibSkinManager`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Comm.Sys.LibSkinManager`1.#ctor(System.Resources.ResourceManager)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Comm.Sys.LibSkinManager`1.ResourceManager">
            <summary>
            资源管理类
            </summary>
        </member>
        <member name="M:Comm.Sys.LibSkinManager`1.GetResource``1(`0,System.Func{System.Object,System.Object})">
            <summary>
            根据指定的资源标识名，取到对应的资源，
            </summary>
            <typeparam name="T">资源的类型</typeparam>
            <param name="key">资源标识名</param>
            <param name="ParseFunc">解析器委拖</param>
            <returns>返回Bitmap、Color或字符串，若转为其它格式请重载ParseImage</returns>
        </member>
        <member name="M:Comm.Sys.LibSkinManager`1.GetResource``1(System.String)">
            <summary>
            根据指定的资源标识名，取到对应的资源
            </summary>
            <typeparam name="T">资源的类型</typeparam>
            <param name="key">资源标识名</param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.LibSkinManager`1.ParseImage(System.Drawing.Bitmap)">
            <summary>
            Bitmap解析器
            </summary>
            <param name="source">Bitmap源图像</param>
            <returns></returns>
        </member>
        <member name="M:Comm.Sys.LibSkinManager`1.ParseColor(System.String)">
            <summary>
            Color解析器
            </summary>
            <param name="cStr">源颜色值字符串</param>
            <returns></returns>
        </member>
    </members>
</doc>
